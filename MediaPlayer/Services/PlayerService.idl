import "Models/MediaMetadata.idl";
import "Models/SubtitleStream.idl";
import "Framework/BindableBase.idl";

namespace MediaPlayer
{
    enum PlayerServiceState
    {
        CLOSED,
        READY,
        STOPPED,
        PLAYING,
        PAUSED,
        SOURCE_SWITCH,
    };

    enum PlayerServiceMode
    {
        FFMPEG,
        MEDIA_FOUNDATION,
        AUTO,
    };

    [default_interface]
    unsealed runtimeclass PlayerService
    {
        PlayerService();
        void Init();

        void SetVideoEffect(String name);
        void SetAudioEffect(String name);
        Windows.Foundation.IAsyncOperation<Boolean> ResourceIsAvailable(String url);
        void AddSourceFromUrl(String url);
        void SetSourceFromUrl(String url);
        void AddSource(String path, String displayName);
        void SetSource(String path);
        void SetSubtitleIndex(Int32 index);
        void SetSubtitleFromFile(String path);
        Boolean HasSource();
        Int32 GetMediaIndexById(GUID id);
        void CreateSnapshot();
        void RecordSegment(UInt64 start, UInt64 end);

        void Next();
        void Prev();
        void StartByIndex(Int32 index);
        void DeleteByIndex(Int32 index);
        void Clear();

        void Start();
        void Start(UInt64 timePos);
        void Stop();
        void Pause();

        void ResizeVideo(UInt32 width, UInt32 height);

        UInt64 Position { get; };
        UInt64 RemainingTime { get; };
        Double PlaybackSpeed;
        Int32 CurrentMediaIndex;
        Double Volume;
        PlayerServiceMode Mode;
        PlayerServiceState State { get; };
        MediaMetadata Metadata { get; };
        Windows.Foundation.Collections.IVector<MediaMetadata> Playlist { get; };
        Windows.Foundation.Collections.IObservableVector<SubtitleStream> SubTracks { get; };
        Windows.Foundation.Collections.IVector<String> VideoEffectNames { get; };
        Windows.Foundation.Collections.IVector<String> AudioEffectNames { get; };
        Microsoft.UI.Xaml.Controls.SwapChainPanel SwapChainPanel;
        Microsoft.UI.Dispatching.DispatcherQueue UIDispatcher;
    }
}
